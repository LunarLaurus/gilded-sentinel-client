name: Gilded Sentinel CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-publish:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [linux-x64, win-x64]

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Restore dependencies (project-level)
      - name: Restore dependencies
        run: dotnet restore gilded-sentinel-client.csproj

      # Build in Release mode
      - name: Build
        run: dotnet build gilded-sentinel-client.csproj --configuration Release

      # Publish for the respective runtime
      - name: Publish
        run: dotnet publish gilded-sentinel-client.csproj --configuration Release --runtime ${{ matrix.runtime }} --output ./assemblies/${{ matrix.runtime }}

      # Create ZIP file for the respective platform
      - name: Create ZIP
        run: |
          zip_filename="./assemblies/${{ matrix.runtime }}/gilded-sentinel-client-${{ matrix.runtime }}-${{ github.run_number }}.zip"
          zip -r $zip_filename ./assemblies/${{ matrix.runtime }}/gilded-sentinel-client* ./assemblies/${{ matrix.runtime }}/appsettings.json

      # Upload the build artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Gilded-Sentinel-Build-${{ matrix.runtime }}-${{ github.sha }}
          path: ./assemblies/${{ matrix.runtime }}/*-${{ github.run_number }}.zip

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name == 'push'

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download build artifacts for both runtimes
      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Gilded-Sentinel-Build-win-x64-${{ github.sha }}
          path: ./assemblies/

      - name: Download Linux Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Gilded-Sentinel-Build-linux-x64-${{ github.sha }}
          path: ./assemblies/

      # Configure Git for tagging
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      # Create Git Tag
      - name: Create Git Tag
        id: tag
        run: |
          git tag -a "v${{ github.run_number }}" -m "Release v${{ github.run_number }}"
          git push origin "v${{ github.run_number }}"

      # Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          files: |
            ./assemblies/gilded-sentinel-client-win-x64-${{ github.run_number }}.zip
            ./assemblies/gilded-sentinel-client-linux-x64-${{ github.run_number }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
