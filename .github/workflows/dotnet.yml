name: Gilded Sentinel CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore gilded-sentinel-client.csproj

      - name: Build in Release mode for Windows
        run: dotnet build gilded-sentinel-client.csproj --configuration Release --runtime win-x64

      - name: Publish for Windows x64
        run: dotnet publish gilded-sentinel-client.csproj --configuration Release --runtime win-x64 --self-contained /p:PublishSingleFile=true /p:PublishTrimmed=true --output ./assemblies/win-x64

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Gilded-Sentinel-Build-Win-x64-${{ github.sha }}
          path: ./assemblies/win-x64

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore gilded-sentinel-client.csproj

      - name: Build in Release mode for Linux
        run: dotnet build gilded-sentinel-client.csproj --configuration Release --runtime linux-x64

      - name: Publish for Linux x64
        run: dotnet publish gilded-sentinel-client.csproj --configuration Release --runtime linux-x64 --self-contained /p:PublishSingleFile=true /p:PublishTrimmed=true --output ./assemblies/linux-x64

      - name: Upload Linux Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Gilded-Sentinel-Build-Linux-x64-${{ github.sha }}
          path: ./assemblies/linux-x64

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Gilded-Sentinel-Build-Win-x64-${{ github.sha }}
          path: ./assemblies/win-x64

      - name: Download Linux Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Gilded-Sentinel-Build-Linux-x64-${{ github.sha }}
          path: ./assemblies/linux-x64

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create Git Tag
        id: tag
        run: |
          git tag -a "v${{ github.run_number }}" -m "Release v${{ github.run_number }}"
          git push origin "v${{ github.run_number }}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./assemblies/win-x64/*
            ./assemblies/linux-x64/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
